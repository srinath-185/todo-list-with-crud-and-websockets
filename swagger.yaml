swagger: "2.0"
info:
  title: "Todo List with CRUD and WebSockets"
  version: "1.0.0"
  description: "API documentation for the Todo List application that supports CRUD operations and WebSocket notifications."
host: "localhost:3000"
basePath: "/api"
schemes:
  - http

paths:
  /task/createTask:
    post:
      tags:
        - "Todo App"
      summary: "Create a new task"
      description: "Creates a new task in the database and notifies connected WebSocket clients."
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/createTaskModel"
      responses:
        200:
          description: "Task created successfully."
        400:
          description: "Task title cannot be empty."
        500:
          description: "Database or internal server error."

  /task/editTask:
    put:
      tags:
        - "Todo App"
      summary: "Edit a task"
      description: "Updates an existing task's name, title, or description and notifies connected clients."
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/editTaskModel"
      responses:
        200:
          description: "Task updated successfully."
        400:
          description: "Task title cannot be empty."
        404:
          description: "Task not found."
        500:
          description: "Internal server error."

  /task/viewTasks:
    get:
      tags:
      - Todo App
      responses:
        200:
          description: A list of tasks
        500:
          description: Internal server error

  /task/deleteTask:
    delete:
      tags:
        - "Todo App"
      summary: "Delete a task"
      description: "Soft deletes a task by marking it as deleted and notifies WebSocket clients."
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/deleteTaskModel"
      responses:
        200:
          description: "Task deleted successfully."
        404:
          description: "Task not found."
        500:
          description: "Internal server error."

definitions:
  createTaskModel:
    type: "object"
    properties:
      task_name:
        type: "string"
        example: "Shopping"
      task_title:
        type: "string"
        example: "Buy groceries"
      task_description:
        type: "string"
        example: "Buy milk, bread, and eggs from the store."

  editTaskModel:
    type: "object"
    properties:
      task_id:
        type: "integer"
        example: 1
      task_name:
        type: "string"
        example: "Shopping List"
      task_title:
        type: "string"
        example: "Buy daily essentials"
      task_description:
        type: "string"
        example: "Updated task description."
    required:
      - task_id
      - task_title

  deleteTaskModel:
    type: "object"
    properties:
      task_id:
        type: "integer"
        example: 1
    required:
      - task_id

  taskModel:
    type: "object"
    properties:
      task_id:
        type: "integer"
        example: 1
      task_name:
        type: "string"
        example: "Shopping"
      task_title:
        type: "string"
        example: "Buy groceries"
      task_description:
        type: "string"
        example: "List of items to buy."
      is_deleted:
        type: "boolean"
        example: false
      created_on:
        type: "string"
        format: "date-time"
        example: "2025-10-28T12:00:00Z"
      updated_on:
        type: "string"
        format: "date-time"
        example: "2025-10-28T14:00:00Z"
